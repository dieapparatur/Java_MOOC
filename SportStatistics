
import java.util.Scanner;
import java.util.ArrayList;
import java.nio.file.Paths;

public class SportStatistics {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ArrayList<Players> playerList = new ArrayList<>();

        System.out.println("File:");
        String fileChoice = scanner.nextLine();

        try (Scanner fileReader = new Scanner(Paths.get(fileChoice))) {
            while (fileReader.hasNextLine()) {            
                String line = fileReader.nextLine();
                String[] parts = line.split(",");
                String homeTeam = parts[0];
                String visit = parts[1];
                int homePoints = Integer.valueOf(parts[2]);
                int visitPoints = Integer.valueOf(parts[3]);
                playerList.add(new Players(homeTeam, visit, homePoints, visitPoints));
            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }

        System.out.println("Team:");
        String whishedTeam = scanner.nextLine();
    
        
        int counter = 0;
        int wins = 0;
        int losses = 0;
        for (Players team: playerList) {
            if (team.getHomeTeam().equals(whishedTeam) || team.getVisit().equals(whishedTeam)) {
                counter++;
                if (team.getHomePoints() > team.getVisitPoints() && team.getHomeTeam().equals(whishedTeam) || team.getHomePoints() < team.getVisitPoints() && team.getVisit().equals(whishedTeam)) {
                    wins++;
                }
                if (team.getHomePoints() < team.getVisitPoints() && team.getHomeTeam().equals(whishedTeam) || team.getHomePoints() > team.getVisitPoints() && team.getVisit().equals(whishedTeam)) {
                    losses++;
                }
            }
        }
        System.out.println("Games: " + counter);
        System.out.println("Wins: " + wins);
        System.out.println("Losses: " + losses);
    }
}
