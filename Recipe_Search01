import java.util.Arrays;
import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import java.nio.file.Paths;

public class RecipeSearch {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        ArrayList<String> recipe = new ArrayList<>();
        ArrayList<ArrayList<String>> allRecipes = new ArrayList<>();
        Recipes recipeObject = new Recipes();

        System.out.println("File to read:");
        String file = scanner.nextLine();

        try (Scanner fileReader = new Scanner(Paths.get(file))) {
            while (fileReader.hasNextLine()) {
                String row = fileReader.nextLine();
                if (!(row.isEmpty())) {
                    recipe.add(row);
                }
                if (row.isEmpty()) {
                    recipe.add(row);
                    allRecipes.add(recipeObject.copyList(recipe));
                    recipe.clear();
                }
            }
            if (!recipe.isEmpty()) {
                allRecipes.add(recipeObject.copyList(recipe));
            }
        } catch (Exception exception) {
            System.out.println("Error: " + exception.getMessage());
        }

        System.out.println("Commands:");
        System.out.println("list - lists the recipes");
        System.out.println("stop - stops the program");
        System.out.println("find name - searches recipes by name");
        System.out.println("find cooking time - searches recipes by cooking time");
        System.out.println("find ingredient - searches recipes by ingredient");

        while (true) {
            System.out.println("Enter command:");
            String command = scanner.nextLine();

            if (command.equals("stop")) {
                System.out.println("Bye bye!");
                break;
            }
            if (command.equals("list")) {
                for (ArrayList<String> single : allRecipes) {
                    System.out.println(single.get(0) + ", cooking time: " + single.get(1));
                }
            }

            if (command.equals("find name")) {
                System.out.println("Searched word:");
                String search = scanner.nextLine();
                System.out.println("Recipes:");
                recipeObject.nameSearch(allRecipes, search);
            }

            if (command.equals("find cooking time")) {
                System.out.println("Max cooking time:");
                String search = scanner.nextLine();
                System.out.println("Recipes:");
                recipeObject.timeSearch(allRecipes, search);
            }

            if (command.equals("find ingredient")) {
                System.out.println("Searched word:");
                String search = scanner.nextLine();
                System.out.println("Recipes:");
                recipeObject.ingredientSearch(allRecipes, search);
            }
        }
    }
}
